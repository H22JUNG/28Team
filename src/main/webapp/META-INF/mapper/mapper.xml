<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.goodee.dao.ProjectDAO">

	<select id="login" resultType="int" parameterType="userVO">
		select count(*) from user
		where userid = #{userid} and password = #{password}
	</select>
	<select id="getUser" resultType="userVO" parameterType="userVO">
		select id, userid, username, tel, email from user
		where userid = #{userid} and password = #{password}
	</select>
	<select id="isAdmin" resultType="int" parameterType="userVO">
		select count(*) from user
		where userid = #{userid} and password = #{password} and admin = 1
	</select>
	
	<!-- 회원가입 -->
	<insert id="addUser" parameterType="userVO">
		insert into user(userid, password, username, tel, address, email, admin)
		values (#{userid}, #{password}, #{username}, #{tel}, #{address}, #{email}, 0)
	</insert>
	<select id="checkid" resultType="int" parameterType="userVO">
		select count(*) from user
		where userid = #{userid}
	</select>
	
	<!-- product list -->
	<!-- 카테고리별 -->
	<select id="selectCategory" resultType="productVO" parameterType="productVO">
		select pic1, pic2, pic3, pic4, name, price, discount, view, date_format (create_date, '%Y-%m-%d %T') 'createDate'
		from product
		where category1 = #{category1}
	</select>
	<select id="selectInnerCategory" resultType="productVO" parameterType="productVO">
		select pic1, pic2, pic3, pic4, name, price, discount, view, date_format (create_date, '%Y-%m-%d %T') 'createDate'
		from product
		where category2 = #{category2}
	</select>
	
	
	<!-- product 전체 list 뽑기 - 윤정 -->
	 <select id="selectProductList" resultType="map">
	 	SELECT product.id, product.NAME, price, view, create_date, option.pro_num, size, color, stock
		FROM option INNER JOIN product
		ON option.id = product.id;
	 </select>
	 
	 <!-- product 수정 불러오기 -->
	 <select id="selectUpdateList" resultType="map">
	 	SELECT option.pro_num, product.pic1, product.pic2, product.pic3, product.pic4, product.NAME, product.price, 
	 	product.discount, product.category1, product.category2, product.view, product.create_date, option.size, option.color, option.stock
		FROM option INNER JOIN product
		ON option.id = product.id
		where pro_num = #{pro_num};
	 </select>
	
	<!-- update를 서비스에 한번에 담아준다.
		product category_id 업데이트 안되는데..나중에 고치자 ?
	 -->
	<update id="update1">
		UPDATE product INNER JOIN option o
		ON product.id = o.id
		SET 
			category1 = #{category1},
			category2 = #{category2},
			product.name = #{name},
			price = #{price},
			discount = #{discount},
			category_id = (SELECT id FROM category WHERE category1 = #{category1} AND category2 = #{category2})
		WHERE o.pro_num = #{proNum}
	</update>
	
	<update id="update2">
		UPDATE option o INNER JOIN (product INNER JOIN category ON product.category_id = category.id)
		ON o.id = product.id
		SET 
			o.id = product.id,
			size = #{size},
			color = #{color},
			stock = #{stock}
		WHERE o.pro_num = #{proNum}
	</update>
	
	<update id="update3">
		UPDATE option o 
		INNER JOIN (product p INNER JOIN category c ON p.category_id = c.id)
		ON p.id = o.id
		SET o.pro_num = CONCAT(o.id,category_code1,category_code2,UPPER(ifnull(size,'')),UPPER(left(ifnull(color,''),1)))
	</update>
	
		<!-- 관리자 페이지 product 삭제 - 윤정 -->
	<delete id="productDelete">
		delete from option
		where pro_num = #{pro_num}
	</delete>
	
	
	
	<!-- 내가 쓴 글 -->
	<select id="getwrote" resultType="wroteVO" parameterType="userVO">
		select id, category, title, content, owner_id, owner, date_format(create_date, '%Y-%m-%d') createDate, re_id 
		from wrotebbs where re_id=0 and owner_id=#{id}
	</select>
	<select id="getRewrote" resultType="wroteVO">
		select id, category, title, content, owner_id, owner, date_format(create_date, '%Y-%m-%d') createDate, re_id 
		from wrotebbs where re_id !=0
	</select>
	<select id="getsearch" resultType="wroteVO" parameterType="String">
		select id, category, title, content, owner_id, owner, date_format(create_date, '%Y-%m-%d') createDate, re_id 
		from wrotebbs 
		where category = #{category}
	</select>
	<select id="getdetail" resultType="wroteVO" parameterType="wroteVO">
		select id, category, title, owner, date_format(create_date, '%Y-%m-%d') createDate, content
		from wrotebbs 
		where id=#{id}
	</select>
	<update id="modify" parameterType="wroteVO">
		update wrotebbs set title=#{title}, content=#{content}
		where id=#{id}
	</update>
	<delete id="getdelete">
		delete from wrotebbs where re_id=#{id} or id=#{id};
	</delete>
	
	<!-- 관리자페이지 회원조회 -->
	<select id="usercount" resultType="int">
		select count(id) from user
	</select>
	
	<select id="userList" resultType="userVO" parameterType="pageVO">
		select id, userid, username, tel, address, email, point from user where admin=0
		limit #{start}, #{cntPerPage}
	</select>
	<select id="userListdetail" resultType="userVO">
		select id, userid, username, tel, address, email, point from user where admin=0
		and id=#{id}
	</select>
	<update id="adminUserUpdate" parameterType="userVO">
		update user set username=#{username}, tel=#{tel}, address=#{address}, email=#{email}, point=#{point}
		where id=#{id}
	</update>
	<delete id="adminUserDelete" parameterType="userVO">
		delete from user where userid=#{userid}
	</delete>
	
	<!-- 유진 mapper, 주문페이지에서 입력한 정보 전송 -->
	<insert id="orderUserInfor" parameterType="orderUser"> 
 	insert into orderUserbbs(id,order_name,pay,address,detailAddress,extraAddress,order_tel,point)
 	values(#{id},#{orderName},#{pay},#{address},#{detailAddress},#{extraAddress},#{orderTel},#{point})
	</insert>
	
	
</mapper>
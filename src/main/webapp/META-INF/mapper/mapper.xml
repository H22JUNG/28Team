<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.goodee.dao.ProjectDAO">

	<select id="login" resultType="int" parameterType="userVO">
		select count(*) from user
		where userid = #{userid} and password = #{password}
	</select>
	<select id="getUser" resultType="userVO" parameterType="userVO">
		select id, userid, username, tel, email, point from user
		where userid = #{userid} and password = #{password}
	</select>
	<select id="isAdmin" resultType="int" parameterType="userVO">
		select count(*) from user
		where userid = #{userid} and password = #{password} and admin = 1
	</select>
	
	<!-- 회원가입 -->
	<insert id="addUser" parameterType="userVO">
		insert into user(userid, password, username, tel, address, email, admin)
		values (#{userid}, #{password}, #{username}, #{tel}, #{address}, #{email}, 0)
	</insert>
	<select id="checkid" resultType="int" parameterType="userVO">
		select count(*) from user
		where userid = #{userid}
	</select>
	
	<!-- product list -->
	<!-- 카테고리별 -->
	<select id="selectCategory" resultType="productVO" parameterType="productVO">
		select id, pic1, pic2, pic3, pic4, name, price, discount, view, date_format(create_date, '%Y-%m-%d %T') createDate
		from product
		where category1 = #{category1}
	</select>
	<select id="selectInnerCategory" resultType="productVO" parameterType="productVO">
		select id, pic1, pic2, pic3, pic4, name, price, discount, view, date_format(create_date, '%Y-%m-%d %T') createDate
		from product
		where category2 = #{category2}
	</select>
	
	<!-- ==================== 관리자 페이지 - 상품 관리 ==================== -->
	<!-- 관리자 페이지 - product 전체 list 뽑기 - 윤정 -->
	 <select id="selectProductList" resultType="map">
	 	SELECT product.id, product.NAME, price, view, create_date, option.pro_num, size, color, stock
		FROM option INNER JOIN product
		ON option.id = product.id;
	 </select>
	 
	 <!-- product 수정 불러오기 -->
	 <select id="selectUpdateList" resultType="map">
	 	SELECT option.pro_num, product.pic1, product.pic2, product.pic3, product.pic4, product.NAME, product.price, 
	 	product.discount, product.category1, product.category2, product.view, product.create_date, option.size, option.color, option.stock
		FROM option INNER JOIN product
		ON option.id = product.id
		where pro_num = #{pro_num};
	 </select>
	
	<!-- update를 서비스에 한번에 담아준다. -->
	<update id="update1">
		UPDATE product INNER JOIN option o
		ON product.id = o.id
		SET 
			category1 = #{category1},
			category2 = #{category2},
			product.name = #{name},
			price = #{price},
			discount = #{discount},
			category_id = (SELECT id FROM category WHERE category1 = #{category1} AND category2 = #{category2})
		WHERE o.pro_num = #{proNum}
	</update>
	
	<update id="update2">
		UPDATE option o INNER JOIN (product INNER JOIN category ON product.category_id = category.id)
		ON o.id = product.id
		SET 
			o.id = product.id,
			size = #{size},
			color = #{color},
			stock = #{stock}
		WHERE o.pro_num = #{proNum}
	</update>
	
	<update id="update3">
		UPDATE option o 
		INNER JOIN (product p INNER JOIN category c ON p.category_id = c.id)
		ON p.id = o.id
		SET o.pro_num = CONCAT(o.id,category_code1,category_code2,UPPER(ifnull(size,'')),UPPER(left(ifnull(color,''),3)))
	</update>
	
	<!-- category_id 업데이트 -->
	<update id="update4">
		UPDATE product INNER JOIN category
		ON product.category_id = category.id
		SET
			product.category_id = category.id
		WHERE
			product.category1 = category.category1 AND product.category2 = category.category2
	</update>
	
	<!-- 관리자 페이지 product 삭제 - 윤정 -->
	<delete id="productDelete">
		delete from option
		where pro_num = #{pro_num}
	</delete>
	<!-- option에 존재하지 않는 id가 product에 있으면 삭제 -->
	<delete id="optionNullId">
		DELETE FROM product
		USING product
		LEFT JOIN option
		ON product.id = option.id
		WHERE option.id IS NULL;
	</delete>
	
	<!-- product insert - 윤정-->
	<insert id="productInsert" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO product(category1, category2, pic1, pic2, pic3, pic4, name, price, discount)
		VALUES (#{category1}, #{category2}, #{pic1}, #{pic2}, #{pic3}, #{pic4}, #{name}, #{price}, #{discount})
	</insert>
	
	<insert id="optionInsert">
		INSERT INTO option (id, size, color, stock)
		VALUES (#{id}, #{size}, #{color}, #{stock})
	</insert>
	<update id="categoryIdUpdate">
		UPDATE product LEFT JOIN category
		ON product.category_id = category.id
		SET
			product.category_id = (SELECT id FROM category WHERE product.category1 = category.category1 AND product.category2 = category.category2)
		WHERE 
			product.category_id IS NULL
	</update>
	<update id="proNumUpdate">
		UPDATE option o 
		INNER JOIN (product p INNER JOIN category c ON p.category_id = c.id)
		ON p.id = o.id
		SET o.pro_num = CONCAT(o.id,category_code1,category_code2,UPPER(ifnull(size,'')),UPPER(left(ifnull(color,''),3)))
	</update>
	
	
	<!-- 내가 쓴 글 -->
	<select id="getwrote" resultType="wroteVO" parameterType="userVO">
		select id, category, title, content, owner_id, owner, date_format(create_date, '%Y-%m-%d') createDate, re_id 
		from qna where re_id=0
		<if test="id != null">
			and owner_id=#{id}
		</if>
	</select>
	<select id="getRewrote" resultType="wroteVO">
		select id, category, title, content, owner_id, owner, date_format(create_date, '%Y-%m-%d') createDate, re_id 
		from qna where re_id !=0
	</select>
	<select id="getsearch" resultType="wroteVO" parameterType="String">
		select id, category, title, content, owner_id, owner, date_format(create_date, '%Y-%m-%d') createDate, re_id 
		from qna 
		
		<if test="id != null">
			and owner_id=#{id}
		</if>
	</select>
	<select id="getdetail" resultType="wroteVO" parameterType="wroteVO">
		select id, category, title, owner, date_format(create_date, '%Y-%m-%d') createDate, content
		from qna 
		where id=#{id}
	</select>
	<update id="modify" parameterType="wroteVO">
		update qna set title=#{title}, content=#{content}
		where id=#{id}
	</update>
	<delete id="getdelete">
		delete from qna where re_id=#{id} or id=#{id};
	</delete>
	
	<!-- 관리자페이지 회원조회 -->
	<select id="usercount" resultType="int" parameterType="pageVO">
		select count(id) from user where admin=0
		<if test="userid != null">
			and userid = #{userInfo}
		</if>
		<if test="username != null">
			and username = #{userInfo}
		</if>
		<if test="tel != null">
			and tel like #{userInfo}
		</if>
		<if test="address != null">
			and address like #{userInfo}
		</if>
		<if test="email != null">
			and email like #{userInfo}
		</if>
	</select>

	<select id="userList" resultType="userVO" parameterType="pageVO">
		select id, userid, username, tel, address, email, point from user
		where admin=0
		<if test="userid != null">
			and userid = #{userInfo}
		</if>
		<if test="username != null">
			and username = #{userInfo}
		</if>
		<if test="tel != null">
			and tel like #{userInfo}
		</if>
		<if test="address != null">
			and address like #{userInfo}
		</if>
		<if test="email != null">
			and email like #{userInfo}
		</if>
		limit #{start}, #{cntPerPage}
	</select>
	
	<select id="userListdetail" resultType="userVO">
		select id, userid, username, tel, address, email, point from user where admin=0
		and id=#{id}
	</select>
	<update id="adminUserUpdate" parameterType="userVO">
		update user set username=#{username}, tel=#{tel}, address=#{address}, email=#{email}, point=#{point}
		where id=#{id}
	</update>
	<delete id="adminUserDelete" parameterType="userVO">
		delete from user where userid=#{userid}
	</delete>
	
	
	<!-- 유진 mapper, 주문페이지에서 입력한 정보 전송 -->
	<select id="cartList" resultType="CartVO" parameterType="userVO">
	select item_name, size, price,count,color
	from cart
	where userid = #{userid}
	</select>
	
	<!-- 주문자 정보입력한것 추가해보기ㅇ -->
 	<insert id="orderUserInfor" parameterType="orderUser"> 
 	INSERT INTO orderuser
	(userid, cart_num, order_name, order_date,pay, address, detailAddress, extraAddress, order_tel,order_num, POINT)
	VALUES(#{userid}, #{cartNum}, #{orderName}, NOW(), #{pay}, #{address},#{detailAddress},#{extraAddress},#{orderTel},#{orderNum},#{point});
		</insert>
	
	<!-- 주문한 상품 저장할 매퍼 하나더  -->
	<insert id="orderItemInfor" parameterType="CartVO">
	INSERT INTO orderitem
	(userid, cart_num, item_name, size, item_price, color)
	VALUES(#{userid},#{cartNum},#{itemName},#{size},#{price},#{color});
	</insert>
	
	<select id="selectCartNum" resultType="int" >
		SELECT ifnull(max(cart_num),0)+1 FROM orderuser WHERE userid = #{userid}
	</select>

	<!-- 결제완료 페이지에 출력되는 내용 -->
	<select id="orderUserResult" resultType="orderUser" parameterType="String">
		select order_name,date_format(order_date,'%Y-%m-%d') 'orderDate',pay,order_num
		from orderuser
		where userid = #{userid}
	</select>
	
	<!-- 마이페이지에서 주문별(장바구니)로 출력하기 -->
	<select id="getOrderList" resultType="orderUser">
		select cart_num, date_format(order_date,'%Y-%m-%d') 'orderDate', order_num, total_price
		from orderuser
		where userid = #{userid}
	</select>
	<!-- 위까지 유진 mapper -->
	
	
	<!-- 상품 상세페이지 조회 -->
	<select id="selectDetail" resultType="productVO">
  		select id, pic1, pic2, pic3, pic4, name, price, discount from product where id = #{id}
  	</select>
  	
  	<select id="selectDetailOption" resultType="optionVO">
  		select id, pro_num, size, color, stock, name from option where id = #{id}
  	</select>
  
  	<!-- 상세페이지 장바구니 담기 -->
  	<insert id="addCart">
  		insert into cart(cartid, userid, userName, id, name, price, count, color, size) 
  		values(null, #{userid}, #{userName}, #{id}, #{name}, #{price}, #{count}, #{color}, #{size})
  	</insert>
	
	
	<!-- Review 게시글 조회-->
	<select id="getReview" parameterType="String" resultType="reviewVO">
		select id, title, content, pic1, pic2, owner_id, owner, date_format(create_date, '%Y-%m-%d') createDate, code, stargrade, hits
		from review
		where code=#{id}
	</select>
	<!-- Reviwe 총 갯수 뽑아오기 -->
	<select id="getReviewCount" parameterType="String" resultType="int">
		SELECT COUNT(id) reviewCount FROM review WHERE CODE=#{id}
	</select>
	
	<!-- Review 별점 별 리뷰 갯수 뽑아오기 -->
<!-- 	<select id="getStarGradeCount" parameterType="int" >
		SELECT COUNT(id) star5 FROM review WHERE CODE=#{id} and stargrade=
		<foreach collection="array" index="index" item="i">#{i}</foreach>
	</select> -->
	<!-- Review 별점 평균 뽑아오기 -->
 	<select id="getStarGradeAvg" parameterType="String" resultType="double">
		SELECT round(AVG(stargrade),1) avg FROM review WHERE CODE=#{id}
	</select> 
	
	
	<!--Q&A 게시글조회 -->
	<select id="QnaList" resultType="QnaVO">
  		select id, code, qna_category, password, owner, title, content, date_format(create_date, '%Y-%m-%d') create_date,
  		owner_id, root, re_id, indent from qna ORDER BY id DESC;
  	</select>
	
	<!--Q&A 타이틀누를때 이동 -->
  	<select id="selectQna" resultType="QnaVO">
  		select id, code, qna_category, password, owner, title, content, date_format(create_date, '%Y-%m-%d') create_date,
  		owner_id, root, re_id, indent from qna where id = #{id}
  	</select>
  	
  	<!-- Q&A update-->
  	<update id="updateQna">
		update qna set qna_category = #{qnaCategory}, password = #{password},owner = #{owner}, title=#{title}, content=#{content}
		where id = #{id} and owner_id = #{ownerId}
	</update>

	<!-- Q&A insert-->
	<insert id="insertQna">
		insert into qna(qna_category, title, owner_id, owner, content, password)
		values('QnA', #{qnaCategory}, #{title}, #{ownerId}, #{owner}, #{content}, #{password})
	</insert>
	
	<!-- Q&A delete-->
	<delete id="deleteQna">
		delete from qna where id = #{id} and owner_id = #{ownerId}
	</delete>
	
	<!-- 공지 list -->
	<select id="selectNotice" resultType="noticeVO">
		select id, title, date_format(create_date, "%Y-%m-%d %T") 'createDate', view, important from notice
		where important = #{important}
		order by createDate desc
	</select>
	
	<select id="selectDetailNotice" resultType="noticeVO">
		select id, title, content, date_format(create_date, "%Y-%m-%d %T") 'createDate', view, important from notice
		where id = #{id}
	</select>
	
	<!-- 공지 insert -->
	<insert id="insertNotice">
		insert into notice (title, content, create_date, important)
		values(#{title}, #{content}, now(), #{important})
	</insert>
	
	<!-- ====================장바구니==================== -->
	<!-- 카트 삭제 -->
	<delete id="deleteCart">
		delete from cart where cart_num = #{cartNum}
	</delete>
	
	<!-- 카트 수량 수정 -->
	<update id="modifyCount">
		update cart
		set
			count = #{count}
		where
			cart_num = #{cartNum}
	</update>
	
	<!-- 카트 목록 / 흠 애매해-->
	<select id="getCart" resultType="cartVO">
		select c.cart_num, c.userid, c.id, c.item_name, c.price, c.discount, c.count, c.color, c.size, c.pic1, c.pro_num
		FROM cart c
		WHERE userid = #{userid}
	</select>
	
	<!-- 카트 확인 -->
	<select id="checkCart" resultType="cartVO">
		select * from cart
		where userid = #{userid} and pro_num = #{proNum}
	</select>
</mapper>